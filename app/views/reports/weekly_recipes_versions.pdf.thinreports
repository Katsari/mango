report.set_layout tlf: 'reports/thinreports_layouts/weekly_recipes_versions'

report.events.on :generate do |e|
  e.pages.each do |page|
    page.item(:page).value(page.no)
    page.item(:page_total).value(report.page_count)
  end
end

def render_page(report, page_index, start_week, weeks)
  report.start_new_page do |page|
    page.values company_name: @data['company_name']
    page.values company_address: @data['company_address']
    page.values company_rif: @data['company_rif']
    page.values company_logo: @data['company_logo']
    page.values title: @data['title']
    page.values since: EasyModel.print_formatted_date(start_week)
    page.values until: EasyModel.print_formatted_date(start_week + weeks.weeks - 1.day)

    table = report.list(:results)

    weeks.times do |i|
      table.header do |header|
        week_start = start_week + i.weeks
        week_end = week_start + 1.week - 1.day
        header
          .item("week_number_#{i + 1}".to_sym)
          .value("Semana #{week_start.strftime("%U").to_i}")
        header
          .item("week_range_#{i + 1}".to_sym)
          .value("#{EasyModel.print_formatted_date(week_start)}\n#{EasyModel.print_formatted_date(week_end)}")
      end
    end

    alternate = 1
    internal_consumption = nil
    @data[:results].each do |result|
      if result[:internal_consumption] != internal_consumption
        table.add_row do |row|
          7.times do |i|
            row.item("l#{i + 1}".to_sym).hide
          end
          row.item(:background).style(:fill, '#7f7f7f')
          row
            .item(:internal_consumption)
            .value(result[:internal_consumption] ? 'Consumo interno' : 'Ventas')
        end
        alternate = 1
      end
      table.add_row do |row|
        row.item(:background).style(:fill, alternate == 1 ? '#ffffff' : '#eeece1')

        row.item(:recipe_name).value(result[:recipe_name])

        weeks.times do |i|
          row
            .item("versions_week_#{i + 1}".to_sym)
            .value(result[:versions][i + 7 * page_index].join(', '))
        end
      end
      alternate *= -1
      internal_consumption = result[:internal_consumption]
    end
  end
end

start_week = @data[:start_week]
weeks = @data[:weeks]

pages = (weeks / 7).ceil

(pages - 1).times do |i|
  render_page(report, i, start_week + (7 * i).weeks, 7)
end

render_page(report, pages - 1, start_week + (7 * (pages - 1)).weeks, weeks % 7)